#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key)   LS(LC(LA(key)))

&sl {
release-after-ms = <5000>;
};


&kscan0 {
debounce-press-ms = <30>;
debounce-release-ms = <30>;
};
&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};
/ {
    keymap {
        compatible = "zmk,keymap";
        zero_layer {
            bindings = <
                &kp ESC   &kp N1   &kp N2   &kp N3          &kp N4 &kp N5   &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp MINUS  &kp EQUAL &kp GRAVE &kp BSPC
                &kp TAB   &kp Q    &kp W    &kp E           &kp R  &kp T    &kp Y     &kp U    &kp I     &kp O     &kp P     &kp LBKT   &kp RBKT  &kp RET
                &kp CAPS  &kp A    &kp S    &kp D           &kp F  &kp G    &kp H     &kp J    &kp K     &kp L     &kp SEMI  &kp SQT    &kp BSLH
                &kp LSHFT &kp Z    &kp X    &kp C           &kp V  &kp B    &kp N     &kp M    &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT  &kp RSHFT
                &kp LCTRL &kp LWIN &kp LALT &studio_unlock  &mo 1 &kp SPACE &mo 2     &kp RALT &kp RWIN  &kp RCTRL &kp LCTRL
            >;
        };
        one_layer {
            bindings = <
                &kp ESC   &kp F1   &kp F2   &kp F3    &kp F4 &kp F5   &kp F6    &kp F7   &kp F8    &kp F9    &kp F10    &kp F11  &kp F12 &kp GRAVE &kp BSPC
                &out OUT_BLE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &kp T    &kp Y     &kp U    &kp I     &kp O     &kp P     &kp LBKT   &kp RBKT  &kp RET
                &bt BT_CLR  &out OUT_USB    &kp S    &kp D     &kp F  &kp G    &kp H     &kp J    &kp K     &kp L     &kp SEMI  &kp SQT    &kp BSLH
                &studio_unlock &kp Z    &kp X    &kp C     &kp V  &kp B    &kp N     &kp M    &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT  &kp RSHFT
                &kp LCTRL &kp LWIN &kp LALT &kp LALT  &mo 1 &kp SPACE &mo 2     &kp RALT &kp RWIN  &kp RCTRL &kp LCTRL
            >;
        };
        two_layer {
            bindings = <
                &kp ESC   &kp F1   &kp F2   &kp F3    &kp F4 &kp F5   &kp F6    &kp F7   &kp F8    &kp F9    &kp F10    &kp F11  &kp F12 &kp GRAVE &kp BSPC
                &out OUT_BLE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &kp T    &kp Y     &kp U    &kp I     &kp O     &kp P     &kp LBKT   &kp RBKT  &kp RET
                &bt BT_CLR  &out OUT_USB    &kp S    &kp D     &kp F  &kp G    &kp H     &kp J    &kp K     &kp L     &kp SEMI  &kp SQT    &kp BSLH
                &studio_unlock &kp Z    &kp X    &kp C     &kp V  &kp B    &kp N     &kp M    &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT  &kp RSHFT
                &kp LCTRL &kp LWIN &kp LALT &kp LALT  &mo 1 &kp SPACE &mo 2     &kp RALT &kp RWIN  &kp RCTRL &kp LCTRL
            >;
        };
        three_layer {
            bindings = <
                &kp ESC   &kp F1   &kp F2   &kp F3    &kp F4 &kp F5   &kp F6    &kp F7   &kp F8    &kp F9    &kp F10    &kp F11  &kp F12 &kp GRAVE &kp BSPC
                &out OUT_BLE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &kp T    &kp Y     &kp U    &kp I     &kp O     &kp P     &kp LBKT   &kp RBKT  &kp RET
                &bt BT_CLR  &out OUT_USB    &kp S    &kp D     &kp F  &kp G    &kp H     &kp J    &kp K     &kp L     &kp SEMI  &kp SQT    &kp BSLH
                &studio_unlock &kp Z    &kp X    &kp C     &kp V  &kp B    &kp N     &kp M    &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT  &kp RSHFT
                &kp LCTRL &kp LWIN &kp LALT &kp LALT  &mo 1 &kp SPACE &mo 2     &kp RALT &kp RWIN  &kp RCTRL &kp LCTRL
            >;
        };
    };
};